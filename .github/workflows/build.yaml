name: Build flake-checker artifacts

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-artifacts:
    runs-on: ${{ matrix.systems.runner }}
    permissions:
      id-token: "write"
      contents: "read"
    env:
      ARTIFACT_KEY: flake-checker-${{ matrix.systems.system }}
    strategy:
      matrix:
        systems:
          - nix-system: aarch64-darwin
            runner: macos-15
            system: ARM64-macOS
          - nix-system: x86_64-darwin
            runner: macos-13
            system: X64-macOS
          - nix-system: aarch64-linux
            runner: ubuntu-24.04-arm
            system: ARM64-Linux
          - nix-system: x86_64-linux
            runner: ubuntu-24.04
            system: X64-Linux
    steps:
      - name: git checkout
        uses: actions/checkout@v4

      - name: Install Determinate Nix
        uses: DeterminateSystems/determinate-nix-action@main

      - name: Set up FlakeHub Cache
        uses: DeterminateSystems/flakehub-cache-action@main

      - name: Build and cache dev shell for ${{ matrix.systems.nix-system }} on ${{ matrix.systems.runner }}
        # We still support this system but caching the dev shell fails due to system support mismatch,
        # and we don't really need this cached anyway
        if: ${{ matrix.systems.nix-system != 'x86_64-darwin' }}
        run: |
          nix build -L ".#devShells.${{ matrix.systems.nix-system }}.default"

      - name: Build package for ${{ matrix.systems.nix-system }}
        run: |
          nix build -L ".#packages.${{ matrix.systems.nix-system }}.default"
          cp ./result/bin/flake-checker flake-checker

      - name: Upload flake-checker executable for ${{ matrix.systems.system }}
        uses: actions/upload-artifact@v4.3.3
        with:
          # Artifact name
          name: ${{ env.ARTIFACT_KEY }}
          path: flake-checker
          retention-days: 1
